import{ap as l,aq as P,ar as f,as as S,at as E,ao as g,j as p}from"./index-e9055987.js";import{t as y,N as D}from"./toast-38b8809c.js";import{f as h,g as x,h as j}from"./SalesService-3d09fa59.js";import{P as N}from"./ProductForm-c9faf1a2.js";import"./StatusIcon-879e2680.js";import"./index.esm-1ac4f407.js";import"./CloseButton-3f8e850c.js";import"./motion-4061acbd.js";import"./FormItem-ea0b05bc.js";import"./Button-ba65fcd6.js";import"./index-8f83c5d8.js";import"./index.esm-ac6f3d99.js";import"./_baseIsEqual-7de73e16.js";import"./_Uint8Array-1ce16692.js";import"./_MapCache-0feb66c1.js";import"./Views-51136580.js";import"./ConfirmDialog-d3517bf8.js";import"./index-48bcc748.js";import"./Tooltip-c9ef7fc2.js";import"./warning-6ee4a779.js";import"./Dialog-0f29b530.js";import"./index-1248b5e2.js";import"./formik.esm-026afa26.js";import"./AdaptableCard-459786db.js";import"./Card-433b6df5.js";import"./Input-cff490ba.js";import"./isNil-1a93575e.js";import"./get-c3140d19.js";import"./react-number-format.es-1ce1616c.js";import"./Alert-102e0217.js";import"./Badge-9568a8b0.js";import"./index-0b16cfb5.js";import"./cloneDeep-860e24f8.js";import"./_getPrototype-241bf201.js";import"./index-6ec4b8b8.js";import"./useControllableState-461bebfa.js";import"./useRootClose-9a8a5c26.js";import"./useDidUpdate-5adca6d0.js";import"./Drawer-1d10f851.js";import"./ScrollBar-7cb0876a.js";import"./useUncertainRef-63de6025.js";import"./index-cba86877.js";import"./index-fd641029.js";import"./Skeleton-ede84c2e.js";import"./index-6bfd69bd.js";import"./index-b1813226.js";import"./index-ca92c429.js";import"./Select-3959542b.js";import"./Switcher-fc6ab2a0.js";import"./index-95867d9f.js";import"./index-470afdad.js";import"./Tag-0c9ab60f.js";import"./Upload-73c59612.js";import"./AttributeService-ad28792a.js";import"./index-a547e199.js";import"./index.esm-6e43d029.js";import"./createLucideIcon-35c01f3b.js";import"./x-663813fb.js";const m="salesProductEdit",c=l(m+"/getProducts",async o=>(await h(o)).data),w=async(o,t)=>(await x(o,t)).data,R=async o=>(await j(o)).data,A={loading:!0,productData:{}},C=P({name:`${m}/state`,initialState:A,reducers:{},extraReducers:o=>{o.addCase(c.fulfilled,(t,e)=>{t.productData=e.payload,t.loading=!1}).addCase(c.pending,t=>{t.loading=!0})}}),F=C.reducer,_=f({data:F}),d=S;E("salesProductEdit",_);const $=()=>{const o=g(),t=d(r=>r.salesProductEdit.data.productData);d(r=>r.salesProductEdit.data.loading);const e=async(r,i)=>{i(!0);const a=await w(r,{id:t._id});i(!1),console.log("SSSS",a),a&&s("updated")},n=()=>{o("/app/sales/product-list")},u=async r=>{r(!1),await R({id:t._id})&&s("deleted")},s=r=>{y.push(p.jsxs(D,{title:`Successfuly ${r}`,type:"success",duration:2500,children:["Producto Exitosamente ",r]}),{placement:"top-center"}),o("/app/sales/product-list")};return p.jsx(N,{type:"edit",onFormSubmit:e,onDiscard:n,onDelete:u})},It=$;export{It as default};
